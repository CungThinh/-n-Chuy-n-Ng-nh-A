// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}


// Bảng Customer (Khách hàng)
model Customer {
  id               Int       @id @default(autoincrement())
  firstName        String    // Họ
  middleName       String?   // Tên đệm (optional)
  lastName         String    // Tên
  dateOfBirth      DateTime  // Ngày tháng năm sinh
  gender           String    // Giới tính
  nationality      String    // Quốc tịch
  passportNumber   String    @unique
  passportExpiry   DateTime  // Ngày hết hạn hộ chiếu
  passportIssuedAt String    // Nơi cấp hộ chiếu
}

// Bảng ContactCustomer (Người liên hệ thanh toán)
model ContactCustomer {
  id        Int      @id @default(autoincrement())
  firstName String   // Họ
  lastName  String   // Tên
  phone     String   // Số điện thoại
  email     String   @unique // Email duy nhất (dùng để liên hệ)
  bookings   Booking[] // Một ContactCustomer chỉ có một Booking
}

// Bảng Booking (Đặt vé)
model Booking {
  id                 Int              @id @default(autoincrement())
  contactCustomerId  Int              // Liên kết với ContactCustomer (người chịu trách nhiệm thanh toán)
  contactCustomer    ContactCustomer  @relation(fields: [contactCustomerId], references: [id])
  
  isRoundTrip        Boolean          
  tickets            Ticket[]         
  payment            Payment?         
  createdAt          DateTime         @default(now())
  updatedAt          DateTime         @updatedAt
  pnr_id             String           // Mã giả được tạo ra, mã hồ sơ
}

// Bảng Ticket (Vé máy bay)
model Ticket {
  id                 Int       @id @default(autoincrement())
  bookingId          Int       // Liên kết với Booking
  booking            Booking   @relation(fields: [bookingId], references: [id])
  
  flightNumber       String
  airline            String 
  departureAirport   String
  arrivalAirport     String
  departureTime      DateTime
  arrivalTime        DateTime 
  travelClass        String   
  total_duration     Int
  price              Float   
   
  tripType           String   // Outbound hoặc Return
  seatNumber         String    // Hard code
}

// Bảng Payment (Thanh toán) 
model Payment {
  id            Int      @id @default(autoincrement())
  bookingId     Int      @unique// Liên kết với Booking
  booking       Booking  @relation(fields: [bookingId], references: [id])
  amount        Float    // Số tiền thanh toán
  paymentMethod String   // Phương thức thanh toán (thẻ tín dụng, ví điện tử, etc.)
  status        String   // Trạng thái thanh toán (đã thanh toán, chờ xử lý, etc.)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Admin {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String    
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt   
}

// Tạo booking trước, sau đó tạo Ticket